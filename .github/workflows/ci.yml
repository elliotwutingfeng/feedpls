name: build

on:
  push:
    branches:
    tags:
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: debug if needed
        run: if [[ "$DEBUG" == "true" ]]; then env; fi
        env:
          DEBUG: ${{secrets.DEBUG}}

      - name: install go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: install golangci-lint
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.39.0

      - name: test and lint backend
        run: |
          go test -race -timeout=60s ./...
          $GITHUB_WORKSPACE/golangci-lint --config ${GITHUB_WORKSPACE}/.golangci.yml run --out-format=github-actions ./...

      - name: end-to-end testing
        run: |
          curl -LO https://github.com/Orange-OpenSource/hurl/releases/download/1.4.0/hurl_1.4.0_amd64.deb
          sudo dpkg -i hurl_1.4.0_amd64.deb
          test/run.sh

      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: build and deploy main image to ghcr.io and dockerhub
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha}}
          GITHUB_REF: ${{ github.ref}}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64,linux/arm/v7,linux/arm64 \
              -t ghcr.io/${USERNAME}/feedpls:${ref} -t ${USERNAME}/feedpls:${ref} .
      - name: deploy tagged (latest) to ghcr.io and dockerhub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha}}
          GITHUB_REF: ${{ github.ref}}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64,linux/arm/v7,linux/arm64 \
              -t ghcr.io/${USERNAME}/feedpls:${ref} -t ghcr.io/${USERNAME}/feedpls:latest \
              -t ${USERNAME}/feedpls:${ref} -t ${USERNAME}/feedpls:latest .     
